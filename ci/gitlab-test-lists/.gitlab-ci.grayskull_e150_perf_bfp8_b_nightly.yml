.pybuda-backend-silicon-gs-e150-perf-bfp8_b:
  extends: .backend-gs-common
  stage: perf-gs-e150-bfp8_b
  rules:
    - if: ($CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_MESSAGE =~ /\[perf_gs_e150_bfp8_b\]/)
    - if: ($CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_MESSAGE =~ /\[no_ci_perf_gs_e150_bfp8_b\]/)
    - if: ($CI_COMMIT_REF_NAME == "main" && $CI_JOB_DESCRIPTION == "pybuda-nightly")
  timeout: 60m
  variables:
    PYTEST_CURRENT_TEST: $CI_JOB_NAME
  tags:
    - gs-1-card
    - e150
    - performance
  script:
    - !reference [.common_prep, script]
    - !reference [.lib_gl_package, script]
  artifacts:
    paths:
      - /builds/tenstorrent/pybuda/*-perf.json
      - "*netlist.yaml"
  after_script:
    - ci/upload-perf-test.py -b gitlab-pipeline-$CI_PIPELINE_ID --job_name $CI_JOB_NAME
    # Move netlist(s) to root so that they'll be in root of artifacts - this runs before artifacts are saved
    - mv pytest_ci_out/$CI_JOB_NAME/*netlist.yaml ./
  
# tenstorrent/pybuda#2190
pybuda-silicon-gs-e150-perf-resnet-bfp8_b:
  extends: .pybuda-backend-silicon-gs-e150-perf-bfp8_b
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-bfp8_b, script]
    - pybuda/test/benchmark/benchmark.py -m resnet -c resnet50 -o $CI_JOB_NAME-perf.json

# tenstorrent/pybuda#2185
pybuda-silicon-gs-e150-perf-mobilenet-v1-bfp8_b:
  extends: .pybuda-backend-silicon-gs-e150-perf-bfp8_b
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-bfp8_b, script]
    - pybuda/test/benchmark/benchmark.py -m mobilenet_v2 -c 224 -o $CI_JOB_NAME-perf.json

# tenstorrent/pybuda#2186
pybuda-silicon-gs-e150-perf-mobilenet-v2-bfp_8:
  extends: .pybuda-backend-silicon-gs-e150-perf-bfp8_b
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-bfp8_b, script]
    - pybuda/test/benchmark/benchmark.py -m mobilenet_v2 -c 224 -mf HiFi2 -o $CI_JOB_NAME-perf.json

# tenstorrent/pybuda#2187
pybuda-silicon-gs-e150-perf-mobilenet-v3-bfp_8:
  extends: .pybuda-backend-silicon-gs-e150-perf-bfp8_b
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-bfp8_b, script]
    - pybuda/test/benchmark/benchmark.py -m mobilenet_v3_timm -c large -o $CI_JOB_NAME-perf.json

# tenstorrent/pybuda#2193
pybuda-silicon-gs-e150-perf-vovnet-v2-bfp_8:
  extends: .pybuda-backend-silicon-gs-e150-perf-bfp8_b
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-bfp8_b, script]
    - pybuda/test/benchmark/benchmark.py -m vovnet_v2 -c 39 -o $CI_JOB_NAME-perf.json

# tenstorrent/pybuda#2188
pybuda-silicon-gs-e150-perf-openpose-body-bfp_8:
  extends: .pybuda-backend-silicon-gs-e150-perf-bfp8_b
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-bfp8_b, script]
    - git submodule update --init --checkout --depth 1 -f third_party/confidential_customer_models
    - pybuda/test/benchmark/benchmark.py -m openpose_osmr_body -c 2d -o $CI_JOB_NAME-perf.json

# tenstorrent/pybuda#2189
pybuda-silicon-gs-e150-perf-openpose-hand-bfp_8:
  extends: .pybuda-backend-silicon-gs-e150-perf-bfp8_b
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-bfp8_b, script]
    - git submodule update --init --checkout --depth 1 -f third_party/confidential_customer_models
    - pybuda/test/benchmark/benchmark.py -m openpose_hand -c basic -o $CI_JOB_NAME-perf.json

# tenstorrent/pybuda#2183
pybuda-silicon-gs-e150-perf-hrnet-bfp_8:
  extends: .pybuda-backend-silicon-gs-e150-perf-bfp8_b
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-bfp8_b, script]
    - pybuda/test/benchmark/benchmark.py -m hrnet -c v2_w64 -o $CI_JOB_NAME-perf.json

# tenstorrent/pybuda#2194
pybuda-silicon-gs-e150-perf-yolo-v3-bfp_8:
  extends: .pybuda-backend-silicon-gs-e150-perf-bfp8_b
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-bfp8_b, script]
    - git submodule update --init --checkout --depth 1 -f third_party/confidential_customer_models
    - pybuda/test/benchmark/benchmark.py -m yolo_v3 -c default -mb 32 -o $CI_JOB_NAME-perf.json

# tenstorrent/pybuda#2195
pybuda-silicon-gs-e150-perf-yolo-v5-bfp_8:
  extends: .pybuda-backend-silicon-gs-e150-perf-bfp8_b
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-bfp8_b, script]
    - pybuda/test/benchmark/benchmark.py -m yolo_v5 -c s -o $CI_JOB_NAME-perf.json

# tenstorrent/pybuda#2184
pybuda-silicon-gs-e150-perf-inception-v4-bfp_8:
  extends: .pybuda-backend-silicon-gs-e150-perf-bfp8_b
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-bfp8_b, script]
    - pybuda/test/benchmark/benchmark.py -m inception_v4 -c 224 -o $CI_JOB_NAME-perf.json

# tenstorrent/pybuda#2191
pybuda-silicon-gs-e150-perf-unet-bfp_8:
  extends: .pybuda-backend-silicon-gs-e150-perf-bfp8_b
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-bfp8_b, script]
    - pybuda/test/benchmark/benchmark.py -m unet -c 256 -o $CI_JOB_NAME-perf.json

# tenstorrent/pybuda#2197
pybuda-silicon-gs-e150-perf-vit-bfp8_b:
  extends: .pybuda-backend-silicon-gs-e150-perf-bfp8_b
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-bfp8_b, script]
    - pybuda/test/benchmark/benchmark.py -m vit -c base -o $CI_JOB_NAME-perf.json

# tenstorrent/pybuda#2198
pybuda-silicon-gs-e150-perf-deit-bfp8_b:
  extends: .pybuda-backend-silicon-gs-e150-perf-bfp8_b
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-bfp8_b, script]
    - pybuda/test/benchmark/benchmark.py -m deit -c base -o $CI_JOB_NAME-perf.json

# tenstorrent/pybuda#2196
pybuda-silicon-gs-e150-perf-bert-large-bfp8_b:
  extends: .pybuda-backend-silicon-gs-e150-perf-bfp8_b
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-bfp8_b, script]
    - pybuda/test/benchmark/benchmark.py -m bert -c large_tc -o $CI_JOB_NAME-perf.json

# tenstorrent/pybuda#2199
pybuda-silicon-gs-e150-perf-whisper-bfp8_b:
  extends: .pybuda-backend-silicon-gs-e150-perf-bfp8_b
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-bfp8_b, script]
    - pybuda/test/benchmark/benchmark.py -m whisper -c small --loop_count 1 -mb 1 --single-thread --generative -o $CI_JOB_NAME-perf.json

# tenstorrent/pybuda#2201
pybuda-silicon-gs-e150-perf-t5-large-bfp8_b:
  extends: .pybuda-backend-silicon-gs-e150-perf-bfp8_b
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-bfp8_b, script]
    - pybuda/test/benchmark/benchmark.py -m t5 -c large --loop_count 1 -mb 1 --single-thread --generative -o $CI_JOB_NAME-perf.json

# tenstorrent/pybuda#2203
pybuda-silicon-gs-e150-perf-flan-t5-large-bfp8_b:
  extends: .pybuda-backend-silicon-gs-e150-perf-bfp8_b
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-bfp8_b, script]
    - pybuda/test/benchmark/benchmark.py -m flan_t5 -c large --loop_count 1 -mb 1 -mf HiFi2 --single-thread --generative -o $CI_JOB_NAME-perf.json
