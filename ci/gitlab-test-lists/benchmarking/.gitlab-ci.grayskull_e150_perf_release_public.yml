.pybuda-backend-silicon-gs-e150-perf-public:
  extends: .backend-gs-common
  rules:
    - if: ($CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_MESSAGE =~ /\[perf_public\]/)
    - if: ($CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_MESSAGE =~ /\[perf_gs_public\]/)
    - if: ($CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_MESSAGE =~ /\[perf_gs_e150_public\]/)
    - if: ($CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_MESSAGE =~ /\[no_ci_perf_public\]/)
    - if: ($CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_MESSAGE =~ /\[no_ci_perf_gs_public\]/)
    - if: ($CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_MESSAGE =~ /\[no_ci_perf_gs_e150_public\]/)
  timeout: 120m
  stage: perf-gs-e150-silicon-release-public
  variables:
    ARCH_NAME: "grayskull"
    BACKEND_ARCH_NAME: "grayskull"
    PYTEST_ADDOPTS: "-svv --silicon-only --durations=10 --durations-min=10 --junitxml=$CI_PROJECT_DIR/test-results/report.xml"
  tags:
    - e150
    - push
  cache:
    - key: "$CI_PROJECT_PATH_SLUG-huggingface"
      paths:
        - .cache/huggingface
      policy: pull
    - key: "$CI_PROJECT_PATH_SLUG-torch"
      paths:
        - .cache/torch
      policy: pull
  artifacts:
    paths:
      - /builds/tenstorrent/pybuda/*-perf.json
      - "*netlist.yaml"
    expire_in: 1 day
    when: always
  script:
    - !reference [.common_prep, script]
    - !reference [.lib_gl_package, script]
    - git submodule update --init --recursive third_party/benchmarking
    - pip install -r third_party/benchmarking/requirements.txt
    - pip install --upgrade huggingface_hub

#FP16
pybuda-silicon-gs-e150-perf-public-resnet:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m resnet -c resnet50 --task image_classification -mb 64 --loop_count 1 --save_output

pybuda-silicon-gs-e150-perf-public-mobilenet-v1:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m mobilenetv1 -c 224 --task image_classification -mb 64 -mf HiFi3 --loop_count 1 --save_output

pybuda-silicon-gs-e150-perf-public-mobilenet-v2:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m mobilenetv2 -c 224 --task image_classification -mb 64 -mf HiFi3 --loop_count 1 --save_output

pybuda-silicon-gs-e150-perf-public-mobilenet-v3:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m mobilenetv3 -c lg --task image_classification -mb 64 -mf HiFi3 --loop_count 1 --save_output

pybuda-silicon-gs-e150-perf-public-vovnet-v2:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m vovnet_v2 -c 39 --task image_classification -mb 64 --loop_count 1 --save_output

pybuda-silicon-gs-e150-perf-public-openpose-body:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m open_pose -c 2d --task pose_estimation -mb 64 -df Fp16 --loop_count 1 --save_output

pybuda-silicon-gs-e150-perf-public-hrnet:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m hrnet -c v2_w64 --task image_classification -mb 64 --loop_count 1 --save_output

pybuda-silicon-gs-e150-perf-public-yolo-v5:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m yolo_v5 -c s --task object_detection -mb 64 --loop_count 1 --save_output

pybuda-silicon-gs-e150-perf-public-inception-v4:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m inception_v4 -c 224 --task image_classification -mb 64 --loop_count 1 --save_output

# TODO: Enable pulling dataset for unet. Currently FAILs.
# pybuda-silicon-gs-e150-perf-public-unet:
#   extends: .pybuda-backend-silicon-gs-e150-perf-public
#   script:
#     - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
#     - python third_party/benchmarking/benchmark.py -d tt -m unet -c 256 --task segmentation -mb 64 --loop_count 1 --save_output

pybuda-silicon-gs-e150-perf-public-vit:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m vit -c base --task image_classification -mb 64 -mf HiFi2 --loop_count 1 --save_output

pybuda-silicon-gs-e150-perf-public-deit:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m deit -c base --task image_classification -mb 64 -mf HiFi2 --loop_count 1 --save_output

pybuda-silicon-gs-e150-perf-public-bert-large:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m bert -c large --task text_classification -mb 64 --loop_count 1 --save_output

pybuda-silicon-gs-e150-perf-public-whisper:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m whisper_enc_dec -c small --task asr -mb 1 --loop_count 1 --save_output

pybuda-silicon-gs-e150-perf-public-t5-large:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m t5 -c large --task text_summarization -mb 1 --loop_count 1 --save_output

pybuda-silicon-gs-e150-perf-public-flan-t5-large:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m flant5 -c large --task text_summarization -mb 1 --loop_count 1 --save_output



#BFP8_B
pybuda-silicon-gs-e150-perf-public-bfp8_b-resnet:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m resnet -c resnet50 --task image_classification -mb 64 --loop_count 1 -df Bfp8_b -mf LoFi --save_output

pybuda-silicon-gs-e150-perf-public-bfp8_b-mobilenet-v1:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m mobilenetv1 -c 224 --task image_classification -mb 64 --loop_count 1 -df Bfp8_b -mf LoFi --save_output

pybuda-silicon-gs-e150-perf-public-bfp8_b-mobilenet-v2:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m mobilenetv2 -c 224 --task image_classification -mb 64 --loop_count 1 -df Bfp8_b -mf LoFi --save_output

pybuda-silicon-gs-e150-perf-public-bfp8_b-mobilenet-v3:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m mobilenetv3 -c lg --task image_classification --loop_count 1 -df Bfp8_b -mf LoFi --save_output

pybuda-silicon-gs-e150-perf-public-bfp8_b-vovnet-v2:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m vovnet_v2 -c 39 --task image_classification -mb 64 --loop_count 1 -df Bfp8_b -mf LoFi --save_output

pybuda-silicon-gs-e150-perf-public-bfp8_b-openpose-body:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m open_pose -c 2d --task pose_estimation -mb 64 -df Fp16 --loop_count 1 -df Bfp8_b -mf LoFi --save_output

pybuda-silicon-gs-e150-perf-public-bfp8_b-hrnet:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m hrnet -c v2_w64 --task image_classification -mb 64 --loop_count 1 -df Bfp8_b -mf LoFi --save_output

pybuda-silicon-gs-e150-perf-public-bfp8_b-yolo-v5:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m yolo_v5 -c s --task object_detection -mb 64 --loop_count 1 -df Bfp8_b -mf LoFi --save_output

pybuda-silicon-gs-e150-perf-public-bfp8_b-inception-v4:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m inception_v4 -c 224 --task image_classification -mb 64 --loop_count 1 -df Bfp8_b -mf LoFi --save_output

# TODO: Enable pulling dataset for unet. Currently FAILs.
# pybuda-silicon-gs-e150-perf-public-bfp8_b-unet:
#   extends: .pybuda-backend-silicon-gs-e150-perf-public
#   script:
#     - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
#     - python third_party/benchmarking/benchmark.py -d tt -m unet -c 256 --task segmentation -mb 64 --loop_count 1 -df Bfp8_b -mf LoFi --save_output

pybuda-silicon-gs-e150-perf-public-bfp8_b-vit:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m vit -c base --task image_classification -mb 64 --loop_count 1 -df Bfp8_b -mf LoFi --save_output

pybuda-silicon-gs-e150-perf-public-bfp8_b-deit:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m deit -c base --task image_classification -mb 64 --loop_count 1 -df Bfp8_b -mf LoFi --save_output

pybuda-silicon-gs-e150-perf-public-bfp8_b-bert-large:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m bert -c large --task text_classification -mb 64 --loop_count 1 -df Bfp8_b -mf LoFi --save_output

pybuda-silicon-gs-e150-perf-public-bfp8_b-whisper:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m whisper_enc_dec -c small --task asr -mb 1 --loop_count 1 -df Bfp8_b -mf LoFi --save_output

pybuda-silicon-gs-e150-perf-public-bfp8_b-t5-large:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m t5 -c large --task text_summarization -mb 1 --loop_count 1 -df Bfp8_b -mf LoFi --save_output

pybuda-silicon-gs-e150-perf-public-bfp8_b-flan-t5-large:
  extends: .pybuda-backend-silicon-gs-e150-perf-public
  script:
    - !reference [.pybuda-backend-silicon-gs-e150-perf-public, script]
    - python third_party/benchmarking/benchmark.py -d tt -m flant5 -c large --task text_summarization -mb 1 --loop_count 1 -df Bfp8_b -mf LoFi --save_output
